---
- block:
    - name: Check datasources list (api)
      uri:
        url: "{{ grafana_api_url }}/api/datasources"
        user: "{{ grafana_security.admin_user }}"
        password: "{{ grafana_security.admin_password }}"
        force_basic_auth: true
        return_content: true
      no_log: true
      register: datasources

    - name: Create grafana datasources (api)
      uri:
        url: "{{ grafana_api_url }}/api/datasources"
        user: "{{ grafana_security.admin_user }}"
        password: "{{ grafana_security.admin_password }}"
        force_basic_auth: true
        method: POST
        body_format: json
        body: "{{ item | to_json }}"
      with_items: "{{ grafana_datasources }}"
      no_log: true
      when: ((datasources['json'] | selectattr("name", "equalto", item['name'])) | list) | length == 0

    - name: Update grafana datasources (api)
      uri:
        url: "{{ grafana_api_url }}/api/datasources/{{ (
                                                    datasources['json'] |
                                                    selectattr('name', 'equalto', item['name']) |
                                                    map(attribute='id') |
                                                    unique |
                                                    join()
                                                   ) }}"
        user: "{{ grafana_security.admin_user }}"
        password: "{{ grafana_security.admin_password }}"
        force_basic_auth: true
        method: PUT
        body_format: json
        body: "{{ item | to_json }}"
      with_items: "{{ grafana_datasources }}"
      no_log: true
      when: ((datasources['json'] | selectattr("name", "equalto", item['name'])) | list) | length != 0
  when: not grafana_use_provisioning

- name: Create/Update datasources file (provisioning)
  copy:
    dest: "/etc/grafana/provisioning/datasources/ansible.yml"
    content: |
      apiVersion: 1
      deleteDatasources: []
      datasources:
      {{ grafana_datasources | to_nice_yaml }}
    backup: false
  become: true
  notify: restart grafana
  when: grafana_use_provisioning
